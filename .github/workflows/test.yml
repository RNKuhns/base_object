name: Test

on:
  push:
    branches:
      - main
      - 'release**'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - main
      - 'release**'
    paths-ignore:
      - 'docs/**'
  status:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: true
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
          python-version: ['3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      name: Set up conda
      with:
        activate-environment: test_env
        environment-file: build_tools/test_env.yml
        miniconda-version: "latest"
        auto-update-conda: true
        channels: conda-forge,defaults
        channel-priority: true
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false
    - name: Check Conda Setup
      shell: bash -l {0}
      run: |
        conda --version
        conda info --envs
        which python

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Activate environment
      run: |
        conda activate test_env

    - name: Generate Pytest coverage report
      run: pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
